<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iyyxx.dao.UserDao">
<!--    <select id="findAll" resultType="com.iyyxx.domain.User">-->
<!--        select * from user-->
<!--    </select>-->

    <resultMap id="baseUserMap" type="com.iyyxx.domain.User">
        <id property="id" column="id" />
        <result property="username" column="username" />
        <result property="age" column="age" />
        <result property="address" column="address" />
    </resultMap>

    <resultMap id="userRoleMap" type="com.iyyxx.domain.User" autoMapping="false" extends="baseUserMap">
        <collection property="roles" ofType="com.iyyxx.domain.Role">
            <id property="id" column="rid"/>
            <result property="name" column="name" />
            <result property="desc" column="desc" />
        </collection>
    </resultMap>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into user(username, age,address) values (#{username}, #{age}, #{address})
    </insert>

    <update id="update">
        update `user`
        <trim prefix="set" prefixOverrides=",">
            <if test="username!=null">
                username = #{username}
            </if>
            <if test="age!=null">
                , age=#{age}
            </if>
            <if test="address!=null">
                , address=#{address}
            </if>
        </trim>
        where id = #{id}
    </update>
    <delete id="deleteById">
        delete from `user` where id= #{id}
    </delete>

    <select id="findUserAndRole" resultMap="userRoleMap">
        SELECT
            u.*,r.id rid, r.`name`,r.`desc`
        FROM
            `user` u,
            user_role ur,
            role r
        WHERE
            u.id = ur.user_id
          AND ur.role_id = r.id
          AND u.id = #{id}
    </select>
    
    <resultMap id="userRoleMapBySelect" type="com.iyyxx.domain.User" extends="baseUserMap">
        <collection property="roles"
                    ofType="com.iyyxx.domain.Role"
                    select="com.iyyxx.dao.RoleDao.findRoleByUserId"
                    fetchType="lazy"
                    column="id"/>
    </resultMap>
    
    <select id="findByUserName" resultMap="userRoleMapBySelect">
        select * from user where username=#{username}
    </select>
    <select id="findAll" resultType="com.iyyxx.domain.User">
        select * from user
    </select>
    <select id="findByUsername" resultType="com.iyyxx.domain.User">
        select * from user where username=#{username} limit 0,1
    </select>
</mapper>